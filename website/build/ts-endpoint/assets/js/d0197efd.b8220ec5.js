"use strict";(self.webpackChunkts_endpoint_docs=self.webpackChunkts_endpoint_docs||[]).push([[662],{35318:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(27378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=o,f=c["".concat(p,".").concat(m)]||c[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},56539:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>f,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(25773),o=n(30808),i=(n(27378),n(35318)),a=["components"],s={id:"simple-guide",title:"simple-guide to start with `ts-endpoint-browser`",sidebar_label:"using `ts-endpoint` in your browser"},p=void 0,l={unversionedId:"ts-endpoint-browser/simple-guide",id:"ts-endpoint-browser/simple-guide",title:"simple-guide to start with `ts-endpoint-browser`",description:"Once you have defined your endpoints with ts-endpoint, you may want to use those definitions for something useful, that's where ts-endpoint-browser comes into play.",source:"@site/../docs/ts-endpoint-browser/simple-guide.md",sourceDirName:"ts-endpoint-browser",slug:"/ts-endpoint-browser/simple-guide",permalink:"/docs/ts-endpoint-browser/simple-guide",draft:!1,tags:[],version:"current",lastUpdatedBy:"fes300",lastUpdatedAt:1619799699,formattedLastUpdatedAt:"Apr 30, 2021",frontMatter:{id:"simple-guide",title:"simple-guide to start with `ts-endpoint-browser`",sidebar_label:"using `ts-endpoint` in your browser"},sidebar:"ts-endpoint-browser",previous:{title:"setting up `ts-endpoint-browser`",permalink:"/docs/ts-endpoint-browser/intro"}},d={},c=[{value:"<code>IOError</code>",id:"ioerror",level:3}],u={toc:c},m="wrapper";function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Once you have defined your endpoints with ",(0,i.kt)("inlineCode",{parentName:"p"},"ts-endpoint"),", you may want to use those definitions for something useful, that's where ",(0,i.kt)("inlineCode",{parentName:"p"},"ts-endpoint-browser")," comes into play."),(0,i.kt)("p",null,"If you want to derive an HTTP client with zero effort, you can use the utility ",(0,i.kt)("inlineCode",{parentName:"p"},"GetFetchHTTPClient")," and pass your endpoints to it:"),(0,i.kt)("p",null,"(",(0,i.kt)("strong",{parentName:"p"},"N.B.:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"GetFetchHTTPClient")," is quite opinionated on how it will handle errors, if you need more control you can use the lower-level API ",(0,i.kt)("inlineCode",{parentName:"p"},"GetHTTPClient"),")"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { getCrayons, createUser } from \"./endpoints\"\nimport { GetFetchHTTPClient } from 'ts-endpoint-browser/lib/fetch';\n\nconst fetchClient = GetFetchHTTPClient(\n  { protocol: 'http', host: 'google' },\n  { getCrayons, createUser },\n  { defaultHeaders: { 'Content-type': 'application/json' } }\n);\n")),(0,i.kt)("p",null,"And use it in your browser:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const myCrayons: TaskEither<IOError, { crayons: string[] }> = fetchClient.getCrayons({\n  Params: { id: 'id' },\n  Query: { color: 'brown' },\n});\n/** performs:\n * fetch(\n *   'http://test:2020/users/id/crayons?color=brown',\n *   { headers: { 'Content-type':'application/json' }, method: 'GET'}\n * )\n */\n\nconst createdUserId: TaskEither<IOError, { id: string }> = fetchClient.createUser({\n  Body: {\n    name: 'John',\n    surname: 'Doe',\n    age: 24,\n  },\n});\n/** performs:\n * fetch(\n *   'http://test/users',\n *   {\n *     headers: { 'Content-type':'application/json' },\n *     method: 'POST,\n *     body: { name: \"John\", surname: \"Doe\", age: 24 }\n *   }\n * )\n */\n")),(0,i.kt)("h3",{id:"ioerror"},(0,i.kt)("inlineCode",{parentName:"h3"},"IOError")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GetFetchHTTPClient")," formats errors in its own opinionated way, returning:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"KnownError")," when the response status coincide with one of those defined in the Endpoint definition (in this case the payload is validated against the corresponding Error Codec)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"NetworkError")," if the request fails without info about the failure"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"ClientError")," if the response status is >= 400 and <= 451),"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"DecodingError")," if the body of the response is different from the specification in the ",(0,i.kt)("inlineCode",{parentName:"li"},"Endpoint")," definition, or a"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"ServerError")," (in all other cases).")),(0,i.kt)("p",null,"The only difference between each error is the ",(0,i.kt)("inlineCode",{parentName:"p"},"kind")," and the fact that if the error kind is ",(0,i.kt)("inlineCode",{parentName:"p"},"DecodingError")," it will also expose an array of errors in its ",(0,i.kt)("inlineCode",{parentName:"p"},"details")," object."))}f.isMDXComponent=!0}}]);